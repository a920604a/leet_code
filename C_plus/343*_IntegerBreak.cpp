class Solution {
public:
    int integerBreak(int n) {
        // # n =2, => 1+1 , 1*1 =1
        // # n= 3 =>  2+1 , 2*1 = 2
        // # n =4 =>  2+2 , 2*2 = 4
        // # n = 5 => 3+2 , 2*3 =6
        // # n = 6 => 3+3 , 3*3 = 9
        // # n = 7 => 3+4 ,  3*4 = 12
        // # n = 8 => 3+3+2, 3*3*2 = 18
        // # n = 9 => 3++3+2 , 3*3*3= 27
        // # n = 10 => 4+3+3 => 4*3*3 = 36
        // # 先將3拆分出來，拆到只剩2或4
        // #   0   1   2   3   4   5   6   7   8   9   10
        // #   1   1   1   1   1   1   1   1   1   1   1  
        // #   1   1   1   2   4   6   9   12  18  27  36
        vector<int> dp(n+1, 1);
        for(int i=3;i<n+1;++i){
            for(int j = 1;j<i;++j){
                dp[i] = max(dp[i], max(j*(i-j), j*dp[i-j]));
            }
        }
        return dp.back();
    }
};